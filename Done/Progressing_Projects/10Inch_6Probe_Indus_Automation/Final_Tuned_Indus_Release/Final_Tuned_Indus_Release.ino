


//-----------------------------------------------------------EEPROM-DataSave----------------------------------------------------------------------

#include <Preferences.h>
Preferences Save_Library;

//------------------------------------------------------PenDrive-I2C-Communication----------------------------------------------------------------------

#include <Ch376msc.h>
#include <SoftwareSerial.h>
SoftwareSerial Pendrive(17, 18);  // RX, TX
Ch376msc flashDrive(Pendrive);
char Read_Buffer[255];
char Row_Buffer[200];

byte tmpCommand;
boolean readMore;
static char helpString[] = { "h:Print this help\n\n1:Create\n2:Append\n3:Read\n4:Read date/time\n"
                             "5:Modify date/time\n6:Delete\n7:List dir\n8:Print free space"
                             "\n9:Open/Create folder(s)/subfolder(s)" };
void printInfo();
void Pendrive_Copy();

char delimiter = ';';
char q;
String we;

//-------------------------------------------------------SD-SPI-Communication----------------------------------------------------------------------

#include "FS.h"
#include "SD.h"
#include "SPI.h"

/* Hardware SP
MOSI: 11
MISO: 13
SCK: 12
SS: 10
*/

//------------------------------------------------------SD-SPI-Communication-Voids---------------------------------------------------------------

void listDir();
void createDir();
void removeDir();
void readFile();
void writeFile();
void appendFile();
void renameFile();
void deleteFile();
void testFileIO();
void SD_Save();

//-----------------------------------------------------I2C-ADC-ADS1115-Communication-------------------------------------------------------------------------

#include <Wire.h>
#define SDA0_Pin 5
#define SCL0_Pin 6

#include <Adafruit_ADS1X15.h>
Adafruit_ADS1115 ADS1;
Adafruit_ADS1115 ADS2;
void Read_ADC();

//------------------------------------------------------------I2C-RTC_DS3231------------------------------------------------------------------------

#include "RTClib.h"
RTC_DS3231 rtc;

int RTC_Sec;
int RTC_Min;
int RTC_Hour;

int RTC_Day;
int RTC_Mon;
int RTC_Year;

char daysOfTheWeek[7][12] = { "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" };
void Set_Time();

//------------------------------------------------UART-Dwin-Display-Serial-communication----------------------------------------------------------------

#define txPin 8
#define rxPin 7
HardwareSerial &dwinSerial = Serial2;

void FloatToHex();
void sendFloatNumber1();
void sendFloatNumber2();
int Screen_Values;
void Fetch_Text();

//------------------------------------------------------------Additional_Voids---------------------------------------------------------------

void Tolerance_Pass();
void Auto_Manual();

//--------------------------------------------------------Dual_Core_Initialisation-------------------------------------------------------

int
  Core0_ADC_1 = 0,
  Core0_ADC_2 = 0, Core0_ADC_3 = 0,
  Core0_ADC_4 = 0, Core0_ADC_5 = 0, Core0_ADC_6 = 0;

//--------------------------------------------------------------Password_Entry--------------------------------------------------------

byte Pass1s[] = { 0x5A, 0xA5, 0x04, 0x82, 0x17, 0x00, 0x2A };
byte Pass2s[] = { 0x5A, 0xA5, 0x05, 0x82, 0x17, 0x00, 0x2A, 0x2A };
byte Pass3s[] = { 0x5A, 0xA5, 0x06, 0x82, 0x17, 0x00, 0x2A, 0x2A, 0x2A };
byte Pass4s[] = { 0x5A, 0xA5, 0x07, 0x82, 0x17, 0x00, 0x2A, 0x2A, 0x2A, 0x2A };
byte PassClr[] = { 0x5A, 0xA5, 0x07, 0x82, 0x17, 0x00, 0x20, 0x20, 0x20, 0x20 };
byte Pass_Page0[] = { 0x5A, 0xA5, 0x07, 0x82, 0x00, 0x84, 0x5A, 0x01, 0x00, 0x00 };
byte Pass_Page1[] = { 0x5A, 0xA5, 0x07, 0x82, 0x00, 0x84, 0x5A, 0x01, 0x00, 0x01 };
byte Pass_Page5[] = { 0x5A, 0xA5, 0x07, 0x82, 0x00, 0x84, 0x5A, 0x01, 0x00, 0x05 };
byte Pass_Page13[] = { 0x5A, 0xA5, 0x07, 0x82, 0x00, 0x84, 0x5A, 0x01, 0x00, 0xD };
byte Pass_Page14[] = { 0x5A, 0xA5, 0x07, 0x82, 0x00, 0x84, 0x5A, 0x01, 0x00, 0xE };
byte Pass_Page15[] = { 0x5A, 0xA5, 0x07, 0x82, 0x00, 0x84, 0x5A, 0x01, 0x00, 0xF };

//----------------------------------------------------------------Count_Entry--------------------------------------------------------

byte Ok_Count_Clr[] = { 0x5A, 0xA5, 0x09, 0x82, 0x74, 0x26, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20 };

//----------------------------------------------------------------Mode_Entry--------------------------------------------------------

byte Dis_Info_Mode_Clr[] = { 0x5A, 0xA5, 0x09, 0x82, 0x17, 0x15, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20 };
byte Dis_Info_Manual[] = { 0x5A, 0xA5, 0x09, 0x82, 0x17, 0x15, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c };
byte Dis_Info_Auto[] = { 0x5A, 0xA5, 0x07, 0x82, 0x17, 0x15, 0x41, 0x55, 0x54, 0x4F };

//----------------------------------------------------------------Time_Entry--------------------------------------------------------

byte Dis_Hour[] = { 0x5A, 0xA5, 0x05, 0x82, 0x16, 0x00, 0x20, 0x20 };
byte Dis_Min[] = { 0x5A, 0xA5, 0x05, 0x82, 0x16, 0x05, 0x20, 0x20 };
byte Dis_Sec[] = { 0x5A, 0xA5, 0x05, 0x82, 0x16, 0x10, 0x20, 0x20 };
byte Home_Page1[] = { 0x5A, 0xA5, 0x07, 0x82, 0x00, 0x84, 0x5A, 0x01, 0x00, 0x01 };

byte Dis_Info_Hour[] = { 0x5A, 0xA5, 0xB, 0x82, 0x16, 0x15, 0x53, 0x65, 0x74, 0x20, 0x48, 0x6F, 0x75, 0x72 };
byte Dis_Info_Min[] = { 0x5A, 0xA5, 0xF, 0x82, 0x16, 0x15, 0x53, 0x65, 0x74, 0x20, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73 };
byte Dis_Info_Sec[] = { 0x5A, 0xA5, 0xF, 0x82, 0x16, 0x15, 0x53, 0x65, 0x74, 0x20, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73 };
byte Dis_Info_Sync[] = { 0x5A, 0xA5, 0xC, 0x82, 0x16, 0x15, 0x53, 0x79, 0x6e, 0x63, 0x20, 0x4e, 0x6f, 0x77, 0x21 };
byte Dis_Info_Clr[] = { 0x5A, 0xA5, 0xF, 0x82, 0x16, 0x15, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20 };

//----------------------------------------------------------Result_Page_Pass/Fail--------------------------------------------------------

byte ADC1_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x01, 0x01, 0x01 };
byte ADC1_PASS[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x01, 0x00, 0x01 };
byte ADC1_Fail[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x01, 0x00, 0x02 };

byte ADC2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x02, 0x01, 0x01 };
byte ADC2_PASS[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x02, 0x00, 0x01 };
byte ADC2_Fail[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x02, 0x00, 0x02 };

byte ADC3_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x03, 0x01, 0x01 };
byte ADC3_PASS[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x03, 0x00, 0x01 };
byte ADC3_Fail[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x03, 0x00, 0x02 };

byte ADC4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x04, 0x01, 0x01 };
byte ADC4_PASS[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x04, 0x00, 0x01 };
byte ADC4_Fail[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x04, 0x00, 0x02 };

byte ADC5_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };
byte ADC5_PASS[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x00, 0x01 };
byte ADC5_Fail[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x00, 0x02 };

byte ADC6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x06, 0x01, 0x01 };
byte ADC6_PASS[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x06, 0x00, 0x01 };
byte ADC6_Fail[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x06, 0x00, 0x02 };

byte Tolerance_Write[] = { 0x5A, 0xA5, 0x08, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

//--------------------------------------------------------Selected-Porobe-Numbers-Mapping------------------------------------------------------------------------------

byte Selected_Probe1[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };
byte Selected_Probe2[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };
byte Selected_Probe3[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };
byte Selected_Probe4[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };
byte Selected_Probe5[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };
byte Selected_Probe6[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };

byte Selected_Probe1_Num[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };
byte Selected_Probe2_Num[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };
byte Selected_Probe3_Num[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };
byte Selected_Probe4_Num[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };
byte Selected_Probe5_Num[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };
byte Selected_Probe6_Num[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };

//----------------------------------Probe1-Mapping-----------------------------

byte Probe1_Num1_2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x11, 0x01, 0x01 };
byte Probe1_Num1[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x11, 0x00, 0x01 };
byte Probe1_Num2[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x11, 0x00, 0x02 };
byte Probe1_Num3_4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x12, 0x01, 0x01 };
byte Probe1_Num3[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x12, 0x00, 0x01 };
byte Probe1_Num4[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x12, 0x00, 0x02 };
byte Probe1_Num5_6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x13, 0x01, 0x01 };
byte Probe1_Num5[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x13, 0x00, 0x01 };
byte Probe1_Num6[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x13, 0x00, 0x02 };
byte Probe1_Num7_8_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x14, 0x01, 0x01 };
byte Probe1_Num7[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x14, 0x00, 0x01 };
byte Probe1_Num8[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x14, 0x00, 0x02 };
byte Probe1_Num9_10_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x15, 0x01, 0x01 };
byte Probe1_Num9[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x15, 0x00, 0x01 };
byte Probe1_Num10[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x15, 0x00, 0x02 };
byte Probe1_Num11_12_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x16, 0x01, 0x01 };
byte Probe1_Num11[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x16, 0x00, 0x01 };
byte Probe1_Num12[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x16, 0x00, 0x02 };
byte Probe1_Num13_14_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x17, 0x01, 0x01 };
byte Probe1_Num13[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x17, 0x00, 0x01 };
byte Probe1_Num14[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x17, 0x00, 0x02 };
byte Probe1_Num15_16_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x18, 0x01, 0x01 };
byte Probe1_Num15[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x18, 0x00, 0x01 };
byte Probe1_Num16[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x18, 0x00, 0x02 };
byte Probe1_Num17_18_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x19, 0x01, 0x01 };
byte Probe1_Num17[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x19, 0x00, 0x01 };
byte Probe1_Num18[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x19, 0x00, 0x02 };
byte Probe1_Num19_20_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x20, 0x01, 0x01 };
byte Probe1_Num19[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x20, 0x00, 0x01 };
byte Probe1_Num20[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x20, 0x00, 0x02 };

//----------------------------------Probe2-Mapping-----------------------------

byte Probe2_Num1_2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x21, 0x01, 0x01 };
byte Probe2_Num1[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x21, 0x00, 0x01 };
byte Probe2_Num2[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x21, 0x00, 0x02 };
byte Probe2_Num3_4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x22, 0x01, 0x01 };
byte Probe2_Num3[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x22, 0x00, 0x01 };
byte Probe2_Num4[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x22, 0x00, 0x02 };
byte Probe2_Num5_6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x23, 0x01, 0x01 };
byte Probe2_Num5[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x23, 0x00, 0x01 };
byte Probe2_Num6[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x23, 0x00, 0x02 };
byte Probe2_Num7_8_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x24, 0x01, 0x01 };
byte Probe2_Num7[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x24, 0x00, 0x01 };
byte Probe2_Num8[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x24, 0x00, 0x02 };
byte Probe2_Num9_10_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x25, 0x01, 0x01 };
byte Probe2_Num9[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x25, 0x00, 0x01 };
byte Probe2_Num10[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x25, 0x00, 0x02 };
byte Probe2_Num11_12_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x26, 0x01, 0x01 };
byte Probe2_Num11[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x26, 0x00, 0x01 };
byte Probe2_Num12[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x26, 0x00, 0x02 };
byte Probe2_Num13_14_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x27, 0x01, 0x01 };
byte Probe2_Num13[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x27, 0x00, 0x01 };
byte Probe2_Num14[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x27, 0x00, 0x02 };
byte Probe2_Num15_16_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x28, 0x01, 0x01 };
byte Probe2_Num15[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x28, 0x00, 0x01 };
byte Probe2_Num16[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x28, 0x00, 0x02 };
byte Probe2_Num17_18_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x29, 0x01, 0x01 };
byte Probe2_Num17[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x29, 0x00, 0x01 };
byte Probe2_Num18[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x29, 0x00, 0x02 };
byte Probe2_Num19_20_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x30, 0x01, 0x01 };
byte Probe2_Num19[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x30, 0x00, 0x01 };
byte Probe2_Num20[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x30, 0x00, 0x02 };

//----------------------------------Probe3-Mapping-----------------------------

byte Probe3_Num1_2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x31, 0x01, 0x01 };
byte Probe3_Num1[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x31, 0x00, 0x01 };
byte Probe3_Num2[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x31, 0x00, 0x02 };
byte Probe3_Num3_4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x32, 0x01, 0x01 };
byte Probe3_Num3[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x32, 0x00, 0x01 };
byte Probe3_Num4[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x32, 0x00, 0x02 };
byte Probe3_Num5_6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x33, 0x01, 0x01 };
byte Probe3_Num5[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x33, 0x00, 0x01 };
byte Probe3_Num6[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x33, 0x00, 0x02 };
byte Probe3_Num7_8_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x34, 0x01, 0x01 };
byte Probe3_Num7[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x34, 0x00, 0x01 };
byte Probe3_Num8[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x34, 0x00, 0x02 };
byte Probe3_Num9_10_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x35, 0x01, 0x01 };
byte Probe3_Num9[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x35, 0x00, 0x01 };
byte Probe3_Num10[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x35, 0x00, 0x02 };
byte Probe3_Num11_12_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x36, 0x01, 0x01 };
byte Probe3_Num11[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x36, 0x00, 0x01 };
byte Probe3_Num12[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x36, 0x00, 0x02 };
byte Probe3_Num13_14_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x37, 0x01, 0x01 };
byte Probe3_Num13[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x37, 0x00, 0x01 };
byte Probe3_Num14[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x37, 0x00, 0x02 };
byte Probe3_Num15_16_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x38, 0x01, 0x01 };
byte Probe3_Num15[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x38, 0x00, 0x01 };
byte Probe3_Num16[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x38, 0x00, 0x02 };
byte Probe3_Num17_18_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x39, 0x01, 0x01 };
byte Probe3_Num17[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x39, 0x00, 0x01 };
byte Probe3_Num18[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x39, 0x00, 0x02 };
byte Probe3_Num19_20_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x40, 0x01, 0x01 };
byte Probe3_Num19[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x40, 0x00, 0x01 };
byte Probe3_Num20[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x40, 0x00, 0x02 };

//----------------------------------Probe4-Mapping-----------------------------

byte Probe4_Num1_2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x41, 0x01, 0x01 };
byte Probe4_Num1[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x41, 0x00, 0x01 };
byte Probe4_Num2[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x41, 0x00, 0x02 };
byte Probe4_Num3_4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x42, 0x01, 0x01 };
byte Probe4_Num3[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x42, 0x00, 0x01 };
byte Probe4_Num4[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x42, 0x00, 0x02 };
byte Probe4_Num5_6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x43, 0x01, 0x01 };
byte Probe4_Num5[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x43, 0x00, 0x01 };
byte Probe4_Num6[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x43, 0x00, 0x02 };
byte Probe4_Num7_8_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x44, 0x01, 0x01 };
byte Probe4_Num7[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x44, 0x00, 0x01 };
byte Probe4_Num8[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x44, 0x00, 0x02 };
byte Probe4_Num9_10_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x45, 0x01, 0x01 };
byte Probe4_Num9[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x45, 0x00, 0x01 };
byte Probe4_Num10[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x45, 0x00, 0x02 };
byte Probe4_Num11_12_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x46, 0x01, 0x01 };
byte Probe4_Num11[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x46, 0x00, 0x01 };
byte Probe4_Num12[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x46, 0x00, 0x02 };
byte Probe4_Num13_14_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x47, 0x01, 0x01 };
byte Probe4_Num13[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x47, 0x00, 0x01 };
byte Probe4_Num14[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x47, 0x00, 0x02 };
byte Probe4_Num15_16_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x48, 0x01, 0x01 };
byte Probe4_Num15[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x48, 0x00, 0x01 };
byte Probe4_Num16[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x48, 0x00, 0x02 };
byte Probe4_Num17_18_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x49, 0x01, 0x01 };
byte Probe4_Num17[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x49, 0x00, 0x01 };
byte Probe4_Num18[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x49, 0x00, 0x02 };
byte Probe4_Num19_20_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x50, 0x01, 0x01 };
byte Probe4_Num19[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x50, 0x00, 0x01 };
byte Probe4_Num20[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x50, 0x00, 0x02 };

//----------------------------------Probe5-Mapping-----------------------------

byte Probe5_Num1_2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x51, 0x01, 0x01 };
byte Probe5_Num1[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x51, 0x00, 0x01 };
byte Probe5_Num2[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x51, 0x00, 0x02 };
byte Probe5_Num3_4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x52, 0x01, 0x01 };
byte Probe5_Num3[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x52, 0x00, 0x01 };
byte Probe5_Num4[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x52, 0x00, 0x02 };
byte Probe5_Num5_6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x53, 0x01, 0x01 };
byte Probe5_Num5[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x53, 0x00, 0x01 };
byte Probe5_Num6[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x53, 0x00, 0x02 };
byte Probe5_Num7_8_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x54, 0x01, 0x01 };
byte Probe5_Num7[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x54, 0x00, 0x01 };
byte Probe5_Num8[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x54, 0x00, 0x02 };
byte Probe5_Num9_10_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x55, 0x01, 0x01 };
byte Probe5_Num9[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x55, 0x00, 0x01 };
byte Probe5_Num10[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x55, 0x00, 0x02 };
byte Probe5_Num11_12_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x56, 0x01, 0x01 };
byte Probe5_Num11[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x56, 0x00, 0x01 };
byte Probe5_Num12[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x56, 0x00, 0x02 };
byte Probe5_Num13_14_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x57, 0x01, 0x01 };
byte Probe5_Num13[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x57, 0x00, 0x01 };
byte Probe5_Num14[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x57, 0x00, 0x02 };
byte Probe5_Num15_16_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x58, 0x01, 0x01 };
byte Probe5_Num15[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x58, 0x00, 0x01 };
byte Probe5_Num16[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x58, 0x00, 0x02 };
byte Probe5_Num17_18_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x59, 0x01, 0x01 };
byte Probe5_Num17[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x59, 0x00, 0x01 };
byte Probe5_Num18[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x59, 0x00, 0x02 };
byte Probe5_Num19_20_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x60, 0x01, 0x01 };
byte Probe5_Num19[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x60, 0x00, 0x01 };
byte Probe5_Num20[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x60, 0x00, 0x02 };

//----------------------------------Probe6-Mapping-----------------------------

byte Probe6_Num1_2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x61, 0x01, 0x01 };
byte Probe6_Num1[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x61, 0x00, 0x01 };
byte Probe6_Num2[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x61, 0x00, 0x02 };
byte Probe6_Num3_4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x62, 0x01, 0x01 };
byte Probe6_Num3[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x62, 0x00, 0x01 };
byte Probe6_Num4[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x62, 0x00, 0x02 };
byte Probe6_Num5_6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x63, 0x01, 0x01 };
byte Probe6_Num5[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x63, 0x00, 0x01 };
byte Probe6_Num6[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x63, 0x00, 0x02 };
byte Probe6_Num7_8_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x64, 0x01, 0x01 };
byte Probe6_Num7[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x64, 0x00, 0x01 };
byte Probe6_Num8[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x64, 0x00, 0x02 };
byte Probe6_Num9_10_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x65, 0x01, 0x01 };
byte Probe6_Num9[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x65, 0x00, 0x01 };
byte Probe6_Num10[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x65, 0x00, 0x02 };
byte Probe6_Num11_12_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x66, 0x01, 0x01 };
byte Probe6_Num11[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x66, 0x00, 0x01 };
byte Probe6_Num12[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x66, 0x00, 0x02 };
byte Probe6_Num13_14_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x67, 0x01, 0x01 };
byte Probe6_Num13[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x67, 0x00, 0x01 };
byte Probe6_Num14[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x67, 0x00, 0x02 };
byte Probe6_Num15_16_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x68, 0x01, 0x01 };
byte Probe6_Num15[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x68, 0x00, 0x01 };
byte Probe6_Num16[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x68, 0x00, 0x02 };
byte Probe6_Num17_18_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x69, 0x01, 0x01 };
byte Probe6_Num17[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x69, 0x00, 0x01 };
byte Probe6_Num18[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x69, 0x00, 0x02 };
byte Probe6_Num19_20_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x70, 0x01, 0x01 };
byte Probe6_Num19[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x70, 0x00, 0x01 };
byte Probe6_Num20[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x70, 0x00, 0x02 };


//-------------------------------------------------Home-Selected-Pos-Mapping------------------------------------------------------------------------------

byte Selected_Pos1_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };
byte Selected_Pos2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };
byte Selected_Pos3_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };
byte Selected_Pos4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };
byte Selected_Pos5_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };
byte Selected_Pos6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };

byte Selected_Pos1_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };
byte Selected_Pos2_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };
byte Selected_Pos3_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };
byte Selected_Pos4_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };
byte Selected_Pos5_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };
byte Selected_Pos6_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };

byte Selected_Pos1_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };
byte Selected_Pos2_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };
byte Selected_Pos3_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };
byte Selected_Pos4_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };
byte Selected_Pos5_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };
byte Selected_Pos6_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x53, 0x05, 0x01, 0x01 };

//----------------------------------Pos1-Mapping-----------------------------

byte Pos1_Num1_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x01, 0x01, 0x01 };
byte Pos1_Num1_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x01, 0x00, 0x01 };
byte Pos1_Num1_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x01, 0x00, 0x02 };

byte Pos1_Num2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x02, 0x01, 0x01 };
byte Pos1_Num2_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x02, 0x00, 0x01 };
byte Pos1_Num2_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x02, 0x00, 0x02 };

byte Pos1_Num3_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x03, 0x01, 0x01 };
byte Pos1_Num3_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x03, 0x00, 0x01 };
byte Pos1_Num3_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x03, 0x00, 0x02 };

byte Pos1_Num4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x04, 0x01, 0x01 };
byte Pos1_Num4_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x04, 0x00, 0x01 };
byte Pos1_Num4_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x04, 0x00, 0x02 };

byte Pos1_Num5_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x05, 0x01, 0x01 };
byte Pos1_Num5_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x05, 0x00, 0x01 };
byte Pos1_Num5_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x05, 0x00, 0x02 };

byte Pos1_Num6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x06, 0x01, 0x01 };
byte Pos1_Num6_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x06, 0x00, 0x01 };
byte Pos1_Num6_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x06, 0x00, 0x02 };

//----------------------------------Pos2-Mapping-----------------------------

byte Pos2_Num1_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x07, 0x01, 0x01 };
byte Pos2_Num1_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x07, 0x00, 0x01 };
byte Pos2_Num1_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x07, 0x00, 0x02 };

byte Pos2_Num2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x08, 0x01, 0x01 };
byte Pos2_Num2_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x08, 0x00, 0x01 };
byte Pos2_Num2_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x08, 0x00, 0x02 };

byte Pos2_Num3_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x09, 0x01, 0x01 };
byte Pos2_Num3_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x09, 0x00, 0x01 };
byte Pos2_Num3_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x09, 0x00, 0x02 };

byte Pos2_Num4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x10, 0x01, 0x01 };
byte Pos2_Num4_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x10, 0x00, 0x01 };
byte Pos2_Num4_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x10, 0x00, 0x02 };

byte Pos2_Num5_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x11, 0x01, 0x01 };
byte Pos2_Num5_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x11, 0x00, 0x01 };
byte Pos2_Num5_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x11, 0x00, 0x02 };

byte Pos2_Num6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x12, 0x01, 0x01 };
byte Pos2_Num6_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x12, 0x00, 0x01 };
byte Pos2_Num6_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x12, 0x00, 0x02 };

//----------------------------------Pos3-Mapping-----------------------------

byte Pos3_Num1_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x13, 0x01, 0x01 };
byte Pos3_Num1_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x13, 0x00, 0x01 };
byte Pos3_Num1_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x13, 0x00, 0x02 };

byte Pos3_Num2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x14, 0x01, 0x01 };
byte Pos3_Num2_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x14, 0x00, 0x01 };
byte Pos3_Num2_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x14, 0x00, 0x02 };

byte Pos3_Num3_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x15, 0x01, 0x01 };
byte Pos3_Num3_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x15, 0x00, 0x01 };
byte Pos3_Num3_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x15, 0x00, 0x02 };

byte Pos3_Num4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x16, 0x01, 0x01 };
byte Pos3_Num4_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x16, 0x00, 0x01 };
byte Pos3_Num4_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x16, 0x00, 0x02 };

byte Pos3_Num5_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x17, 0x01, 0x01 };
byte Pos3_Num5_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x17, 0x00, 0x01 };
byte Pos3_Num5_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x17, 0x00, 0x02 };

byte Pos3_Num6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x18, 0x01, 0x01 };
byte Pos3_Num6_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x18, 0x00, 0x01 };
byte Pos3_Num6_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x18, 0x00, 0x02 };

//----------------------------------Pos4-Mapping-----------------------------

byte Pos4_Num1_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x19, 0x01, 0x01 };
byte Pos4_Num1_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x19, 0x00, 0x01 };
byte Pos4_Num1_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x19, 0x00, 0x02 };

byte Pos4_Num2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x20, 0x01, 0x01 };
byte Pos4_Num2_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x20, 0x00, 0x01 };
byte Pos4_Num2_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x20, 0x00, 0x02 };

byte Pos4_Num3_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x21, 0x01, 0x01 };
byte Pos4_Num3_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x21, 0x00, 0x01 };
byte Pos4_Num3_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x21, 0x00, 0x02 };

byte Pos4_Num4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x22, 0x01, 0x01 };
byte Pos4_Num4_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x22, 0x00, 0x01 };
byte Pos4_Num4_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x22, 0x00, 0x02 };

byte Pos4_Num5_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x23, 0x01, 0x01 };
byte Pos4_Num5_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x23, 0x00, 0x01 };
byte Pos4_Num5_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x23, 0x00, 0x02 };

byte Pos4_Num6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x24, 0x01, 0x01 };
byte Pos4_Num6_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x24, 0x00, 0x01 };
byte Pos4_Num6_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x24, 0x00, 0x02 };

//----------------------------------Pos5-Mapping-----------------------------

byte Pos5_Num1_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x25, 0x01, 0x01 };
byte Pos5_Num1_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x25, 0x00, 0x01 };
byte Pos5_Num1_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x25, 0x00, 0x02 };

byte Pos5_Num2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x26, 0x01, 0x01 };
byte Pos5_Num2_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x26, 0x00, 0x01 };
byte Pos5_Num2_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x26, 0x00, 0x02 };

byte Pos5_Num3_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x27, 0x01, 0x01 };
byte Pos5_Num3_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x27, 0x00, 0x01 };
byte Pos5_Num3_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x27, 0x00, 0x02 };

byte Pos5_Num4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x28, 0x01, 0x01 };
byte Pos5_Num4_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x28, 0x00, 0x01 };
byte Pos5_Num4_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x28, 0x00, 0x02 };

byte Pos5_Num5_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x29, 0x01, 0x01 };
byte Pos5_Num5_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x29, 0x00, 0x01 };
byte Pos5_Num5_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x29, 0x00, 0x02 };

byte Pos5_Num6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x30, 0x01, 0x01 };
byte Pos5_Num6_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x30, 0x00, 0x01 };
byte Pos5_Num6_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x30, 0x00, 0x02 };

//----------------------------------Pos6-Mapping-----------------------------

byte Pos6_Num1_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x31, 0x01, 0x01 };
byte Pos6_Num1_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x31, 0x00, 0x01 };
byte Pos6_Num1_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x31, 0x00, 0x02 };

byte Pos6_Num2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x32, 0x01, 0x01 };
byte Pos6_Num2_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x32, 0x00, 0x01 };
byte Pos6_Num2_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x32, 0x00, 0x02 };

byte Pos6_Num3_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x33, 0x01, 0x01 };
byte Pos6_Num3_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x33, 0x00, 0x01 };
byte Pos6_Num3_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x33, 0x00, 0x02 };

byte Pos6_Num4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x34, 0x01, 0x01 };
byte Pos6_Num4_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x34, 0x00, 0x01 };
byte Pos6_Num4_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x34, 0x00, 0x02 };

byte Pos6_Num5_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x35, 0x01, 0x01 };
byte Pos6_Num5_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x35, 0x00, 0x01 };
byte Pos6_Num5_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x35, 0x00, 0x02 };

byte Pos6_Num6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x36, 0x01, 0x01 };
byte Pos6_Num6_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x36, 0x00, 0x01 };
byte Pos6_Num6_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x36, 0x00, 0x02 };


//----------------------------------Pos7-Mapping-----------------------------

byte Pos7_Num1_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x37, 0x01, 0x01 };
byte Pos7_Num1_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x37, 0x00, 0x01 };
byte Pos7_Num1_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x37, 0x00, 0x02 };

byte Pos7_Num2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x38, 0x01, 0x01 };
byte Pos7_Num2_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x38, 0x00, 0x01 };
byte Pos7_Num2_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x38, 0x00, 0x02 };

byte Pos7_Num3_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x39, 0x01, 0x01 };
byte Pos7_Num3_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x39, 0x00, 0x01 };
byte Pos7_Num3_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x39, 0x00, 0x02 };

byte Pos7_Num4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x40, 0x01, 0x01 };
byte Pos7_Num4_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x40, 0x00, 0x01 };
byte Pos7_Num4_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x40, 0x00, 0x02 };

byte Pos7_Num5_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x41, 0x01, 0x01 };
byte Pos7_Num5_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x41, 0x00, 0x01 };
byte Pos7_Num5_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x41, 0x00, 0x02 };

byte Pos7_Num6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x42, 0x01, 0x01 };
byte Pos7_Num6_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x42, 0x00, 0x01 };
byte Pos7_Num6_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x42, 0x00, 0x02 };

//----------------------------------Pos8-Mapping-----------------------------

byte Pos8_Num1_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x43, 0x01, 0x01 };
byte Pos8_Num1_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x43, 0x00, 0x01 };
byte Pos8_Num1_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x43, 0x00, 0x02 };

byte Pos8_Num2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x44, 0x01, 0x01 };
byte Pos8_Num2_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x44, 0x00, 0x01 };
byte Pos8_Num2_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x44, 0x00, 0x02 };

byte Pos8_Num3_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x45, 0x01, 0x01 };
byte Pos8_Num3_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x45, 0x00, 0x01 };
byte Pos8_Num3_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x45, 0x00, 0x02 };

byte Pos8_Num4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x46, 0x01, 0x01 };
byte Pos8_Num4_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x46, 0x00, 0x01 };
byte Pos8_Num4_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x46, 0x00, 0x02 };

byte Pos8_Num5_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x47, 0x01, 0x01 };
byte Pos8_Num5_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x47, 0x00, 0x01 };
byte Pos8_Num5_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x47, 0x00, 0x02 };

byte Pos8_Num6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x48, 0x01, 0x01 };
byte Pos8_Num6_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x48, 0x00, 0x01 };
byte Pos8_Num6_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x48, 0x00, 0x02 };

//----------------------------------Pos9-Mapping-----------------------------

byte Pos9_Num1_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x49, 0x01, 0x01 };
byte Pos9_Num1_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x49, 0x00, 0x01 };
byte Pos9_Num1_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x49, 0x00, 0x02 };

byte Pos9_Num2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x50, 0x01, 0x01 };
byte Pos9_Num2_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x50, 0x00, 0x01 };
byte Pos9_Num2_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x50, 0x00, 0x02 };

byte Pos9_Num3_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x51, 0x01, 0x01 };
byte Pos9_Num3_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x51, 0x00, 0x01 };
byte Pos9_Num3_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x51, 0x00, 0x02 };

byte Pos9_Num4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x52, 0x01, 0x01 };
byte Pos9_Num4_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x52, 0x00, 0x01 };
byte Pos9_Num4_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x52, 0x00, 0x02 };

byte Pos9_Num5_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x53, 0x01, 0x01 };
byte Pos9_Num5_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x53, 0x00, 0x01 };
byte Pos9_Num5_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x53, 0x00, 0x02 };

byte Pos9_Num6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x54, 0x01, 0x01 };
byte Pos9_Num6_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x54, 0x00, 0x01 };
byte Pos9_Num6_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x54, 0x00, 0x02 };

//----------------------------------Pos10-Mapping-----------------------------

byte Pos10_Num1_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x55, 0x01, 0x01 };
byte Pos10_Num1_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x55, 0x00, 0x01 };
byte Pos10_Num1_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x55, 0x00, 0x02 };

byte Pos10_Num2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x56, 0x01, 0x01 };
byte Pos10_Num2_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x56, 0x00, 0x01 };
byte Pos10_Num2_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x56, 0x00, 0x02 };

byte Pos10_Num3_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x57, 0x01, 0x01 };
byte Pos10_Num3_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x57, 0x00, 0x01 };
byte Pos10_Num3_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x57, 0x00, 0x02 };

byte Pos10_Num4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x58, 0x01, 0x01 };
byte Pos10_Num4_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x58, 0x00, 0x01 };
byte Pos10_Num4_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x58, 0x00, 0x02 };

byte Pos10_Num5_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x59, 0x01, 0x01 };
byte Pos10_Num5_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x59, 0x00, 0x01 };
byte Pos10_Num5_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x59, 0x00, 0x02 };

byte Pos10_Num6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x60, 0x01, 0x01 };
byte Pos10_Num6_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x60, 0x00, 0x01 };
byte Pos10_Num6_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x60, 0x00, 0x02 };

//----------------------------------Pos11-Mapping-----------------------------

byte Pos11_Num1_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x61, 0x01, 0x01 };
byte Pos11_Num1_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x61, 0x00, 0x01 };
byte Pos11_Num1_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x61, 0x00, 0x02 };

byte Pos11_Num2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x62, 0x01, 0x01 };
byte Pos11_Num2_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x62, 0x00, 0x01 };
byte Pos11_Num2_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x62, 0x00, 0x02 };

byte Pos11_Num3_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x63, 0x01, 0x01 };
byte Pos11_Num3_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x63, 0x00, 0x01 };
byte Pos11_Num3_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x63, 0x00, 0x02 };

byte Pos11_Num4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x64, 0x01, 0x01 };
byte Pos11_Num4_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x64, 0x00, 0x01 };
byte Pos11_Num4_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x64, 0x00, 0x02 };

byte Pos11_Num5_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x65, 0x01, 0x01 };
byte Pos11_Num5_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x65, 0x00, 0x01 };
byte Pos11_Num5_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x65, 0x00, 0x02 };

byte Pos11_Num6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x66, 0x01, 0x01 };
byte Pos11_Num6_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x66, 0x00, 0x01 };
byte Pos11_Num6_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x66, 0x00, 0x02 };

//----------------------------------Pos12-Mapping-----------------------------

byte Pos12_Num1_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x67, 0x01, 0x01 };
byte Pos12_Num1_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x67, 0x00, 0x01 };
byte Pos12_Num1_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x67, 0x00, 0x02 };

byte Pos12_Num2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x68, 0x01, 0x01 };
byte Pos12_Num2_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x68, 0x00, 0x01 };
byte Pos12_Num2_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x68, 0x00, 0x02 };

byte Pos12_Num3_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x69, 0x01, 0x01 };
byte Pos12_Num3_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x69, 0x00, 0x01 };
byte Pos12_Num3_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x69, 0x00, 0x02 };

byte Pos12_Num4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x70, 0x01, 0x01 };
byte Pos12_Num4_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x70, 0x00, 0x01 };
byte Pos12_Num4_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x70, 0x00, 0x02 };

byte Pos12_Num5_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x71, 0x01, 0x01 };
byte Pos12_Num5_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x71, 0x00, 0x01 };
byte Pos12_Num5_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x71, 0x00, 0x02 };

byte Pos12_Num6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x72, 0x01, 0x01 };
byte Pos12_Num6_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x72, 0x00, 0x01 };
byte Pos12_Num6_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x72, 0x00, 0x02 };

//----------------------------------Pos13-Mapping-----------------------------

byte Pos13_Num1_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x73, 0x01, 0x01 };
byte Pos13_Num1_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x73, 0x00, 0x01 };
byte Pos13_Num1_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x73, 0x00, 0x02 };

byte Pos13_Num2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x74, 0x01, 0x01 };
byte Pos13_Num2_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x74, 0x00, 0x01 };
byte Pos13_Num2_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x74, 0x00, 0x02 };

byte Pos13_Num3_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x75, 0x01, 0x01 };
byte Pos13_Num3_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x75, 0x00, 0x01 };
byte Pos13_Num3_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x75, 0x00, 0x02 };

byte Pos13_Num4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x76, 0x01, 0x01 };
byte Pos13_Num4_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x76, 0x00, 0x01 };
byte Pos13_Num4_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x76, 0x00, 0x02 };

byte Pos13_Num5_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x77, 0x01, 0x01 };
byte Pos13_Num5_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x77, 0x00, 0x01 };
byte Pos13_Num5_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x77, 0x00, 0x02 };

byte Pos13_Num6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x78, 0x01, 0x01 };
byte Pos13_Num6_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x78, 0x00, 0x01 };
byte Pos13_Num6_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x78, 0x00, 0x02 };

//----------------------------------Pos14-Mapping-----------------------------

byte Pos14_Num1_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x79, 0x01, 0x01 };
byte Pos14_Num1_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x79, 0x00, 0x01 };
byte Pos14_Num1_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x79, 0x00, 0x02 };

byte Pos14_Num2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x80, 0x01, 0x01 };
byte Pos14_Num2_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x80, 0x00, 0x01 };
byte Pos14_Num2_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x80, 0x00, 0x02 };

byte Pos14_Num3_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x81, 0x01, 0x01 };
byte Pos14_Num3_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x81, 0x00, 0x01 };
byte Pos14_Num3_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x81, 0x00, 0x02 };

byte Pos14_Num4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x82, 0x01, 0x01 };
byte Pos14_Num4_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x82, 0x00, 0x01 };
byte Pos14_Num4_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x82, 0x00, 0x02 };

byte Pos14_Num5_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x83, 0x01, 0x01 };
byte Pos14_Num5_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x83, 0x00, 0x01 };
byte Pos14_Num5_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x83, 0x00, 0x02 };

byte Pos14_Num6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x84, 0x01, 0x01 };
byte Pos14_Num6_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x84, 0x00, 0x01 };
byte Pos14_Num6_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x84, 0x00, 0x02 };

//----------------------------------Pos15-Mapping-----------------------------

byte Pos15_Num1_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x85, 0x01, 0x01 };
byte Pos15_Num1_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x85, 0x00, 0x01 };
byte Pos15_Num1_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x85, 0x00, 0x02 };

byte Pos15_Num2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x86, 0x01, 0x01 };
byte Pos15_Num2_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x86, 0x00, 0x01 };
byte Pos15_Num2_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x86, 0x00, 0x02 };

byte Pos15_Num3_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x87, 0x01, 0x01 };
byte Pos15_Num3_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x87, 0x00, 0x01 };
byte Pos15_Num3_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x87, 0x00, 0x02 };

byte Pos15_Num4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x88, 0x01, 0x01 };
byte Pos15_Num4_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x88, 0x00, 0x01 };
byte Pos15_Num4_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x88, 0x00, 0x02 };

byte Pos15_Num5_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x89, 0x01, 0x01 };
byte Pos15_Num5_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x89, 0x00, 0x01 };
byte Pos15_Num5_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x89, 0x00, 0x02 };

byte Pos15_Num6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x90, 0x01, 0x01 };
byte Pos15_Num6_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x90, 0x00, 0x01 };
byte Pos15_Num6_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x90, 0x00, 0x02 };

//----------------------------------Pos16-Mapping-----------------------------

byte Pos16_Num1_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x91, 0x01, 0x01 };
byte Pos16_Num1_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x91, 0x00, 0x01 };
byte Pos16_Num1_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x91, 0x00, 0x02 };

byte Pos16_Num2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x92, 0x01, 0x01 };
byte Pos16_Num2_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x92, 0x00, 0x01 };
byte Pos16_Num2_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x92, 0x00, 0x02 };

byte Pos16_Num3_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x93, 0x01, 0x01 };
byte Pos16_Num3_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x93, 0x00, 0x01 };
byte Pos16_Num3_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x93, 0x00, 0x02 };

byte Pos16_Num4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x94, 0x01, 0x01 };
byte Pos16_Num4_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x94, 0x00, 0x01 };
byte Pos16_Num4_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x94, 0x00, 0x02 };

byte Pos16_Num5_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x95, 0x01, 0x01 };
byte Pos16_Num5_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x95, 0x00, 0x01 };
byte Pos16_Num5_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x95, 0x00, 0x02 };

byte Pos16_Num6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x96, 0x01, 0x01 };
byte Pos16_Num6_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x96, 0x00, 0x01 };
byte Pos16_Num6_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x96, 0x00, 0x02 };

//----------------------------------Pos17-Mapping-----------------------------

byte Pos17_Num1_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x97, 0x01, 0x01 };
byte Pos17_Num1_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x97, 0x00, 0x01 };
byte Pos17_Num1_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x97, 0x00, 0x02 };

byte Pos17_Num2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x98, 0x01, 0x01 };
byte Pos17_Num2_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x98, 0x00, 0x01 };
byte Pos17_Num2_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x98, 0x00, 0x02 };

byte Pos17_Num3_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x99, 0x01, 0x01 };
byte Pos17_Num3_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x99, 0x00, 0x01 };
byte Pos17_Num3_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x54, 0x99, 0x00, 0x02 };

byte Pos17_Num4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x00, 0x01, 0x01 };
byte Pos17_Num4_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x00, 0x00, 0x01 };
byte Pos17_Num4_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x00, 0x00, 0x02 };

byte Pos17_Num5_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x01, 0x01, 0x01 };
byte Pos17_Num5_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x01, 0x00, 0x01 };
byte Pos17_Num5_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x01, 0x00, 0x02 };

byte Pos17_Num6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x02, 0x01, 0x01 };
byte Pos17_Num6_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x02, 0x00, 0x01 };
byte Pos17_Num6_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x02, 0x00, 0x02 };

//----------------------------------Pos18-Mapping-----------------------------

byte Pos18_Num1_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x03, 0x01, 0x01 };
byte Pos18_Num1_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x03, 0x00, 0x01 };
byte Pos18_Num1_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x03, 0x00, 0x02 };

byte Pos18_Num2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x04, 0x01, 0x01 };
byte Pos18_Num2_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x04, 0x00, 0x01 };
byte Pos18_Num2_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x04, 0x00, 0x02 };

byte Pos18_Num3_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x05, 0x01, 0x01 };
byte Pos18_Num3_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x05, 0x00, 0x01 };
byte Pos18_Num3_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x05, 0x00, 0x02 };

byte Pos18_Num4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x06, 0x01, 0x01 };
byte Pos18_Num4_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x06, 0x00, 0x01 };
byte Pos18_Num4_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x06, 0x00, 0x02 };

byte Pos18_Num5_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x07, 0x01, 0x01 };
byte Pos18_Num5_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x07, 0x00, 0x01 };
byte Pos18_Num5_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x07, 0x00, 0x02 };

byte Pos18_Num6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x08, 0x01, 0x01 };
byte Pos18_Num6_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x08, 0x00, 0x01 };
byte Pos18_Num6_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x08, 0x00, 0x02 };

//----------------------------------Pos19-Mapping-----------------------------

byte Pos19_Num1_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x09, 0x01, 0x01 };
byte Pos19_Num1_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x09, 0x00, 0x01 };
byte Pos19_Num1_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x09, 0x00, 0x02 };

byte Pos19_Num2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x10, 0x01, 0x01 };
byte Pos19_Num2_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x10, 0x00, 0x01 };
byte Pos19_Num2_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x10, 0x00, 0x02 };

byte Pos19_Num3_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x11, 0x01, 0x01 };
byte Pos19_Num3_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x11, 0x00, 0x01 };
byte Pos19_Num3_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x11, 0x00, 0x02 };

byte Pos19_Num4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x12, 0x01, 0x01 };
byte Pos19_Num4_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x12, 0x00, 0x01 };
byte Pos19_Num4_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x12, 0x00, 0x02 };

byte Pos19_Num5_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x13, 0x01, 0x01 };
byte Pos19_Num5_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x13, 0x00, 0x01 };
byte Pos19_Num5_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x13, 0x00, 0x02 };

byte Pos19_Num6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x14, 0x01, 0x01 };
byte Pos19_Num6_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x14, 0x00, 0x01 };
byte Pos19_Num6_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x14, 0x00, 0x02 };

//----------------------------------Pos20-Mapping-----------------------------

byte Pos20_Num1_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x15, 0x01, 0x01 };
byte Pos20_Num1_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x15, 0x00, 0x01 };
byte Pos20_Num1_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x15, 0x00, 0x02 };

byte Pos20_Num2_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x16, 0x01, 0x01 };
byte Pos20_Num2_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x16, 0x00, 0x01 };
byte Pos20_Num2_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x16, 0x00, 0x02 };

byte Pos20_Num3_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x17, 0x01, 0x01 };
byte Pos20_Num3_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x17, 0x00, 0x01 };
byte Pos20_Num3_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x17, 0x00, 0x02 };

byte Pos20_Num4_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x18, 0x01, 0x01 };
byte Pos20_Num4_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x18, 0x00, 0x01 };
byte Pos20_Num4_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x18, 0x00, 0x02 };

byte Pos20_Num5_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x19, 0x01, 0x01 };
byte Pos20_Num5_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x19, 0x00, 0x01 };
byte Pos20_Num5_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x19, 0x00, 0x02 };

byte Pos20_Num6_Off[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x20, 0x01, 0x01 };
byte Pos20_Num6_Green[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x20, 0x00, 0x01 };
byte Pos20_Num6_Red[] = { 0x5A, 0xA5, 0x05, 0x82, 0x55, 0x20, 0x00, 0x02 };

//-------------------------------------------------------Overall_Initialisation------------------------------------------------------------------------------

float receivedFloat;
int check = 1;
bool checkdone = false;

float Setval_ADC1, Setval_ADC2, Setval_ADC3, Setval_ADC4, Setval_ADC5, Setval_ADC6;
int Convert1, Convert2, Convert3, Convert4, Convert5, Convert6;
float Final_ADC1, Final_ADC2, Final_ADC3, Final_ADC4, Final_ADC5, Final_ADC6;
long ADCTimer;
float tolerance = 0;
String Collect = "";

int Start_Once = 0;
int Array_Copier;

String Stat_Str1, Stat_Str2, Stat_Str3, Stat_Str4, Stat_Str5, Stat_Str6;

char Disp_Date_Char[12], Disp_Time_Char[8];
char True_Map1[8], True_Map2[8], True_Map3[8], True_Map4[8], True_Map5[8], True_Map6[8];
char User_Map1[8], User_Map2[8], User_Map3[8], User_Map4[8], User_Map5[8], User_Map6[8];
char Devi1[8], Devi2[8], Devi3[8], Devi4[8], Devi5[8], Devi6[8];
char Act1[8], Act2[8], Act3[8], Act4[8], Act5[8], Act6[8], Toler[5];
char Result1[5], Result2[5], Result3[5], Result4[5], Result5[5], Result6[5];
char Stat1_Char[5], Stat2_Char[5], Stat3_Char[5], Stat4_Char[5], Stat5_Char[5], Stat6_Char[5];
size_t schLen;  // save copier
char Ok_Count_Char[5];

#define B1 34
#define B2 35
#define Emergency_Button 36
#define Fail_Indicator 9
#define Reset_Button 37
#define Piston_Reed1 40
#define Piston_Reed2 41
#define Piston_Soli1 14
#define Piston_Soli2 15
bool Button_Lock = false;
bool Piston_Home = true;

#define Punch_Reed1 1
#define Punch_Reed2 2
#define Punch_Soli1 16
#define Punch_Soli2 33
bool Piston_Bottom = false;
bool Punch_Lock = false;

bool Punch_Forward = false;
bool Punch_Backward = false;
bool Piston_Up2Down = false;
bool Piston_Down2Up = false;

bool Punch_Avoid_If = false;
bool Emergency_Lock = false;


bool Pasword_Lock = false;
String Pass_Fixed = "2389";
String Pass_Entry = "";

bool Time_Lock = false;
float Time_receivedFloat;

int Hourx;
int Minx;
int Secx;

char Disp_Hour_Char[12], Disp_Min_Char[12], Disp_Sec_Char[12];

bool Hourb = true;
bool Minb = false;
bool Secb = false;
bool Syncb = false;


String Modex;
bool Modex_Change = true;


int OK_Count = 0;
String OK_Count_Str = "" ;

//-------------------------------------------------------------Setup-----------------------------------------------------------------------------

void setup() {

  //------------------------Core_Build-------------------------

  disableCore0WDT();
  disableCore1WDT();
  Serial.begin(115200);

  //------------------------Clock-RTC--------------------------

  Wire.begin(SDA0_Pin, SCL0_Pin);
  if (!rtc.begin()) {
    Serial.println("Couldn't find RTC");
    Serial.flush();
    while (1) delay(10);
  }
  rtc.begin();
  // rtc.adjust(DateTime(2024, 3, 26, 13, 10, 30));

  //------------------------Pendrive--------------------------

  Pendrive.begin(9600);
  flashDrive.init();
  printInfo(helpString);

  //------------------------Display---------------------------

  dwinSerial.begin(115200, SERIAL_8N1, rxPin, txPin);
  dwinSerial.setTimeout(10);
  while (!Serial) { delay(1); }
  delay(1000);

  //-------------------Retrive_Mode_Values----------------------

  Save_Library.begin("Storage", false);
  Modex = Save_Library.getString("Sav_Modex", "");
  delay(10);
  Serial.println(Modex);
  Save_Library.end();
  if (Modex == "Auto") {
    Serial.println("Set to Auto");
    dwinSerial.write(Dis_Info_Mode_Clr, sizeof(Dis_Info_Mode_Clr));
    dwinSerial.write(Dis_Info_Auto, sizeof(Dis_Info_Auto));
  }
  if (Modex == "Manual") {
    Serial.println("Set to Manual");
    dwinSerial.write(Dis_Info_Mode_Clr, sizeof(Dis_Info_Mode_Clr));
    dwinSerial.write(Dis_Info_Manual, sizeof(Dis_Info_Manual));
  }


  //-------------------Retrive_Mapping_Variables----------------------

  Save_Library.begin("Storage", false);

  schLen = Save_Library.getBytesLength("Sav_User_Map1");
  Save_Library.getBytes("Sav_User_Map1", User_Map1, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sav_User_Map2");
  Save_Library.getBytes("Sav_User_Map2", User_Map2, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sav_User_Map3");
  Save_Library.getBytes("Sav_User_Map3", User_Map3, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sav_User_Map4");
  Save_Library.getBytes("Sav_User_Map4", User_Map4, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sav_User_Map5");
  Save_Library.getBytes("Sav_User_Map5", User_Map5, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sav_User_Map6");
  Save_Library.getBytes("Sav_User_Map6", User_Map6, schLen);
  delay(10);

  schLen = Save_Library.getBytesLength("Sav_True_Map1");
  Save_Library.getBytes("Sav_True_Map1", True_Map1, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sav_True_Map2");
  Save_Library.getBytes("Sav_True_Map2", True_Map2, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sav_True_Map3");
  Save_Library.getBytes("Sav_True_Map3", True_Map3, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sav_True_Map4");
  Save_Library.getBytes("Sav_True_Map4", True_Map4, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sav_True_Map5");
  Save_Library.getBytes("Sav_True_Map5", True_Map5, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sav_True_Map6");
  Save_Library.getBytes("Sav_True_Map6", True_Map6, schLen);
  delay(10);

  delay(10);
  Save_Library.end();

  //------------------------Retrive_Tolerance-------------------------

  Save_Library.begin("Storage", false);
  tolerance = Save_Library.getFloat("Tolerance_Save", 0);
  delay(10);

  Setval_ADC1 = Save_Library.getFloat("ADC1", 0);
  delay(10);
  Setval_ADC2 = Save_Library.getFloat("ADC2", 0);
  delay(10);
  Setval_ADC3 = Save_Library.getFloat("ADC3", 0);
  delay(10);
  Setval_ADC4 = Save_Library.getFloat("ADC4", 0);
  delay(10);
  Setval_ADC5 = Save_Library.getFloat("ADC5", 0);
  delay(10);
  Setval_ADC6 = Save_Library.getFloat("ADC6", 0);
  delay(10);

  delay(10);
  Save_Library.end();

  //----------------------------Retrive_Disp_Positions-------------------------

  //------------------------------Probe-1 values----------------------------

  Save_Library.begin("Storage", false);
  delay(10);

  schLen = Save_Library.getBytesLength("Sel_Pos1_Off");
  Save_Library.getBytes("Sel_Pos1_Off", Selected_Pos1_Off, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sel_Pos1_Green");
  Save_Library.getBytes("Sel_Pos1_Green", Selected_Pos1_Green, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sel_Pos1_Red");
  Save_Library.getBytes("Sel_Pos1_Red", Selected_Pos1_Red, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sel_Prob1_Num");
  Save_Library.getBytes("Sel_Prob1_Num", Selected_Probe1_Num, schLen);
  delay(10);

  //------------------------------Probe-2 values----------------------------

  schLen = Save_Library.getBytesLength("Sel_Pos2_Off");
  Save_Library.getBytes("Sel_Pos2_Off", Selected_Pos2_Off, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sel_Pos2_Green");
  Save_Library.getBytes("Sel_Pos2_Green", Selected_Pos2_Green, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sel_Pos2_Red");
  Save_Library.getBytes("Sel_Pos2_Red", Selected_Pos2_Red, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sel_Prob2_Num");
  Save_Library.getBytes("Sel_Prob2_Num", Selected_Probe2_Num, schLen);
  delay(10);

  //------------------------------Probe-3 values----------------------------

  schLen = Save_Library.getBytesLength("Sel_Pos3_Off");
  Save_Library.getBytes("Sel_Pos3_Off", Selected_Pos3_Off, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sel_Pos3_Green");
  Save_Library.getBytes("Sel_Pos3_Green", Selected_Pos3_Green, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sel_Pos3_Red");
  Save_Library.getBytes("Sel_Pos3_Red", Selected_Pos3_Red, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sel_Prob3_Num");
  Save_Library.getBytes("Sel_Prob3_Num", Selected_Probe3_Num, schLen);
  delay(10);


  //------------------------------Probe-4 values----------------------------

  schLen = Save_Library.getBytesLength("Sel_Pos4_Off");
  Save_Library.getBytes("Sel_Pos4_Off", Selected_Pos4_Off, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sel_Pos4_Green");
  Save_Library.getBytes("Sel_Pos4_Green", Selected_Pos4_Green, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sel_Pos4_Red");
  Save_Library.getBytes("Sel_Pos4_Red", Selected_Pos4_Red, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sel_Prob4_Num");
  Save_Library.getBytes("Sel_Prob4_Num", Selected_Probe4_Num, schLen);
  delay(10);


  //------------------------------Probe-5 values----------------------------

  schLen = Save_Library.getBytesLength("Sel_Pos5_Off");
  Save_Library.getBytes("Sel_Pos5_Off", Selected_Pos5_Off, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sel_Pos5_Green");
  Save_Library.getBytes("Sel_Pos5_Green", Selected_Pos5_Green, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sel_Pos5_Red");
  Save_Library.getBytes("Sel_Pos5_Red", Selected_Pos5_Red, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sel_Prob5_Num");
  Save_Library.getBytes("Sel_Prob5_Num", Selected_Probe5_Num, schLen);
  delay(10);


  //------------------------------Probe-6 values----------------------------

  schLen = Save_Library.getBytesLength("Sel_Pos6_Off");
  Save_Library.getBytes("Sel_Pos6_Off", Selected_Pos6_Off, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sel_Pos6_Green");
  Save_Library.getBytes("Sel_Pos6_Green", Selected_Pos6_Green, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sel_Pos6_Red");
  Save_Library.getBytes("Sel_Pos6_Red", Selected_Pos6_Red, schLen);
  delay(10);
  schLen = Save_Library.getBytesLength("Sel_Prob6_Num");
  Save_Library.getBytes("Sel_Prob6_Num", Selected_Probe6_Num, schLen);
  delay(10);


  Save_Library.end();


  //------------------------------Setup_SD_Save-------------------------
  //INPUT_PULLUP
  {
    pinMode(B1, INPUT_PULLUP);
    pinMode(B2, INPUT_PULLUP);
    pinMode(Emergency_Button, INPUT_PULLUP);
    pinMode(Reset_Button, INPUT_PULLUP);
    pinMode(Piston_Reed1, INPUT);
    pinMode(Piston_Reed2, INPUT);
    pinMode(Piston_Soli1, OUTPUT);
    pinMode(Piston_Soli2, OUTPUT);
    pinMode(Punch_Reed1, INPUT);
    pinMode(Punch_Reed2, INPUT);
    pinMode(Punch_Soli1, OUTPUT);
    pinMode(Punch_Soli2, OUTPUT);
    pinMode(Fail_Indicator, OUTPUT);

    digitalWrite(Piston_Soli1, HIGH);
    digitalWrite(Piston_Soli2, HIGH);
    digitalWrite(Punch_Soli1, HIGH);
    digitalWrite(Punch_Soli2, HIGH);
    digitalWrite(Fail_Indicator, HIGH);

    while (!Serial) { delay(10); }

#ifdef REASSIGN_PINS
    SPI.begin(sck, miso, mosi, cs);
#endif
    if (!SD.begin()) {
      Serial.println("Card Mount Failed");
      return;
    }
    uint8_t cardType = SD.cardType();

    if (cardType == CARD_NONE) {
      Serial.println("No SD card attached");
      return;
    }

    Serial.print("SD Card Type: ");
    if (cardType == CARD_MMC) {
      Serial.println("MMC");
    } else if (cardType == CARD_SD) {
      Serial.println("SDSC");
    } else if (cardType == CARD_SDHC) {
      Serial.println("SDHC");
    } else {
      Serial.println("UNKNOWN");
    }

    uint64_t cardSize = SD.cardSize() / (1024 * 1024);
    Serial.printf("SD Card Size: %lluMB\n", cardSize);
  }

  //------------------------ADC_16Bit-------------------------

  if (!ADS1.begin(0x48)) {
    Serial.println("1Failed to initialize ADS.");
    while (1)
      ;
  }
  if (!ADS2.begin(0x49)) {
    Serial.println("2Failed to initialize ADS.");
    while (1)
      ;
  }
  delay(500);

  //dwinSerial.write(Pass_Page0, sizeof(Pass_Page0));
  //delay(2000);
  dwinSerial.write(Pass_Page1, sizeof(Pass_Page1));
  delay(50);



    {
        OK_Count = 0;
        OK_Count_Str = String(OK_Count);
    //      dwinSerial.write(Ok_Count_Clr, sizeof(Ok_Count_Clr));
    OK_Count_Str.toCharArray(Ok_Count_Char, OK_Count_Str.length() + 1);

  dwinSerial.write(0x5A);
  dwinSerial.write(0xA5);
  dwinSerial.write(strlen(Ok_Count_Char) + 3);
  dwinSerial.write(0x82);
  dwinSerial.write(0x74);
  dwinSerial.write(0x26);
  for (int i = 0; i < strlen(Ok_Count_Char); i++) {
    char c = Ok_Count_Char[i];
    dwinSerial.write(c);
  }

 // delay(10000);
 
        sendFloatShiftCount(OK_Count);
}



}

void loop() {

  Fetch_Text();
  Read_ADC();
  //SD_Save();
  Pendrive_Copy();
  Set_Time();
  Tolerance_Pass();
  Auto_Manual();


  if (receivedFloat == 94)
  {
        OK_Count = 0;
        sendFloatShiftCount(OK_Count);
        /*
        OK_Count_Str = String(OK_Count);
  //        dwinSerial.write(Ok_Count_Clr, sizeof(Ok_Count_Clr));
    OK_Count_Str.toCharArray(Ok_Count_Char, OK_Count_Str.length() + 1);

  dwinSerial.write(0x5A);
  dwinSerial.write(0xA5);
  dwinSerial.write(strlen(Ok_Count_Char) + 3);
  dwinSerial.write(0x82);
  dwinSerial.write(0x74);
  dwinSerial.write(0x26);
  for (int i = 0; i < strlen(Ok_Count_Char); i++) {
    char c = Ok_Count_Char[i];
    dwinSerial.write(c);
  }
  */
}



}
